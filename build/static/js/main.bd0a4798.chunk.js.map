{"version":3,"sources":["realtime.js","upload.js","header.js","index.js"],"names":["tf","modelWeight","modelHeight","names","colors","RealtimeApp","state","model","preview","predictions","videoRef","React","createRef","canvasRef","myStream","detectFrame","video","startScope","input","resizeBilinear","fromPixels","div","expandDims","executeAsync","then","_this","renderPredictions","requestAnimationFrame","endScope","document","getElementById","style","display","innerHTML","c","current","ctx","getContext","clearRect","canvas","width","height","font","textBaseline","i","_predictions","Object","slicedToArray","boxes","scores","classes","valid_detections","boxes_data","dataSync","scores_data","classes_data","valid_detections_data","textHeight","parseInt","_boxes_data$slice","slice","_boxes_data$slice2","x1","y1","x2","y2","klass","score","toFixed","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","fillRect","_boxes_data$slice3","_boxes_data$slice4","fillText","_this2","this","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","catch","error","console","log","modelPromise","all","values","getTracks","forEach","track","stop","react_default","a","createElement","className","id","autoPlay","playsInline","muted","ref","Component","UploadApp","onDrop","accepted","rejected","links","setState","cropToCanvas","image","naturalWidth","naturalHeight","ratio","Math","min","newWidth","round","newHeight","drawImage","onImageChange","_callee","e","res","_res","_x2","_y","_klass","_score","regenerator_default","wrap","_context","prev","next","target","sent","build_default","accept","multiple","alt","onLoad","src","data","Header","react_router_dom","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","href","aria-current","react_router","exact","path","realtime","upload","headerElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd0a4798.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\nimport React from \"react\";\r\ntf.setBackend('webgl');\r\n\r\nconst weights = '/facemask-detector/model.json';\r\nconst [modelWeight, modelHeight] = [640, 640];\r\nconst names = ['incorrect mask', 'mask', 'no mask'];\r\nconst colors = ['#FFDE80', '#66FF80', '#FF6584'];\r\n\r\n\r\nclass RealtimeApp extends React.Component {\r\n  state = {\r\n    model: null,\r\n    preview: \"\",\r\n    predictions: []\r\n  }\r\n\r\n  videoRef = React.createRef();\r\n  canvasRef = React.createRef();\r\n  myStream = null;\r\n\r\n  componentDidMount() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      const webCamPromise = navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            facingMode: \"user\",\r\n            width: \"640\",\r\n            height: \"480\"\r\n          }\r\n        })\r\n        .then(stream => {\r\n          window.stream = stream;\r\n          this.myStream = stream;\r\n          this.videoRef.current.srcObject = stream;\r\n          return new Promise((resolve, reject) => {\r\n            this.videoRef.current.onloadedmetadata = () => {\r\n              resolve();\r\n            };\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.log('error', error);\r\n        });\r\n\r\n      const modelPromise = tf.loadGraphModel(weights);\r\n      Promise.all([modelPromise, webCamPromise])\r\n        .then(values => {\r\n          this.detectFrame(this.videoRef.current, values[0]);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    const tracks = this.myStream.getTracks();\r\n\r\n    tracks.forEach(function (track) {\r\n      track.stop();\r\n    });\r\n  }\r\n\r\n  detectFrame = (video, model) => {\r\n    tf.engine().startScope();\r\n    const input = tf.tidy(() => {\r\n      return tf.image.resizeBilinear(tf.browser.fromPixels(video), [modelWeight, modelHeight])\r\n        .div(255.0).expandDims(0);\r\n    });\r\n\r\n    model.executeAsync(input)\r\n      .then(predictions => {\r\n        this.renderPredictions(predictions, video);\r\n        requestAnimationFrame(() => {\r\n          this.detectFrame(video, model);\r\n        });\r\n        tf.engine().endScope();\r\n      });\r\n  };\r\n\r\n  renderPredictions = predictions => {\r\n    document.getElementById(\"rt-loader\").style.display = \"none\";\r\n    document.getElementById(\"loader-status\").innerHTML = \"Real-time detection.\";\r\n    var c = document.getElementById('frame');\r\n    if (this.canvasRef != null && this.canvasRef.current != null) {\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n      // Font options.\r\n      const font = \"16px sans-serif\";\r\n      ctx.font = font;\r\n      ctx.textBaseline = \"top\";\r\n\r\n      //Getting predictions\r\n      const [boxes, scores, classes, valid_detections] = predictions;\r\n      const boxes_data = boxes.dataSync();\r\n      const scores_data = scores.dataSync();\r\n      const classes_data = classes.dataSync();\r\n      const valid_detections_data = valid_detections.dataSync()[0];\r\n\r\n      tf.dispose(predictions);\r\n\r\n      var i;\r\n      const textHeight = parseInt(font, 10);\r\n      for (i = 0; i < valid_detections_data; ++i) {\r\n        let [x1, y1, x2, y2] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n        x1 *= c.width;\r\n        x2 *= c.width;\r\n        y1 *= c.height;\r\n        y2 *= c.height;\r\n        const width = x2 - x1;\r\n        const height = y2 - y1;\r\n        const klass = names[classes_data[i]];\r\n        const score = scores_data[i].toFixed(2);\r\n\r\n        // Draw the bounding box.\r\n        ctx.strokeStyle = colors[classes_data[i]];\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeRect(x1, y1, width, height);\r\n\r\n        // Draw the label background.\r\n        ctx.fillStyle = colors[classes_data[i]];\r\n        const textWidth = ctx.measureText(klass + \":\" + score).width;\r\n        // const textHeight = parseInt(font, 10); // base 10\r\n        ctx.fillRect(x1-2, y1-textHeight-4, textWidth + 4, textHeight + 4);\r\n      }\r\n      for (i = 0; i < valid_detections_data; ++i) {\r\n        let [x1, y1, ,] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n        x1 *= c.width;\r\n        y1 *= c.height;\r\n        const klass = names[classes_data[i]];\r\n        const score = scores_data[i].toFixed(2);\r\n\r\n        // Draw the text last to ensure it's on top.\r\n        ctx.fillStyle = \"#2f2e41\";\r\n        ctx.fillText(klass + \":\" + score, x1, y1 - textHeight);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center\">\r\n        <h2 className=\"text-center title\">Face Mask Detection with YOLOv5</h2>\r\n        <div className=\"d-inline-flex flex-row justify-content-center\">\r\n          <p className=\"text-center subtitle\" id=\"loader-status\">Loading model</p>\r\n          <div className=\"lds-ellipsis\" id=\"rt-loader\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n        <div className=\"d-flex flex-column justify-content-center align-items-start\">\r\n          <video\r\n            className=\"mx-auto z-index-1 position-relative\"\r\n            autoPlay\r\n            playsInline\r\n            muted\r\n            ref={this.videoRef}\r\n            width=\"640\"\r\n            height=\"480\" \r\n            id=\"frame\"          \r\n          />\r\n          <canvas\r\n            className=\"mx-auto z-index-2 d-flex align-self-center position-absolute\"\r\n            ref={this.canvasRef}\r\n            width=\"640\"\r\n            height=\"480\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RealtimeApp;","import * as tf from '@tensorflow/tfjs';\r\nimport React from \"react\";\r\nimport MagicDropzone from \"react-magic-dropzone\";\r\n// import \"./upload.css\";\r\n// import * as svg from \"./images/undraw_duplicate_re_d39g.svg\";\r\n\r\nconst weights = '/facemask-detector/model.json';\r\n\r\nconst [modelWeight, modelHeight] = [640, 640];\r\nconst names = ['incorrect mask', 'mask', 'no mask'];\r\nconst colors = ['#FFDE80', '#66FF80', '#FF6584'];\r\n\r\nclass UploadApp extends React.Component {\r\n  state = {\r\n    model: null,\r\n    preview: \"\",\r\n    predictions: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let model = await tf.loadGraphModel(weights);\r\n    this.setState({ model });\r\n  }\r\n\r\n  onDrop = (accepted, rejected, links) => {\r\n    this.setState({ preview: accepted[0].preview || links[0] });\r\n  };\r\n\r\n  cropToCanvas = (image, canvas, ctx) => {\r\n    const naturalWidth = image.naturalWidth;\r\n    const naturalHeight = image.naturalHeight;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    const ratio = Math.min(canvas.width / image.naturalWidth, canvas.height / image.naturalHeight);\r\n    const newWidth = Math.round(naturalWidth * ratio);\r\n    const newHeight = Math.round(naturalHeight * ratio);\r\n    ctx.drawImage(\r\n      image,\r\n      0,\r\n      0,\r\n      naturalWidth,\r\n      naturalHeight,\r\n      (canvas.width - newWidth) / 2,\r\n      (canvas.height - newHeight) / 2,\r\n      newWidth,\r\n      newHeight,\r\n    );\r\n\r\n  };\r\n\r\n  onImageChange = async e => {\r\n    const c = document.getElementById(\"image-canvas\");\r\n    const ctx = c.getContext(\"2d\");\r\n    this.cropToCanvas(e.target, c, ctx);\r\n\r\n    const input = tf.tidy(() => {\r\n      // console.log('input:', tf.image.resizeBilinear(tf.browser.fromPixels(c), [modelWeight, modelHeight])\r\n      // .div(255.0).expandDims(0));\r\n      return tf.image.resizeBilinear(tf.browser.fromPixels(c), [modelWeight, modelHeight])\r\n        .div(255.0).expandDims(0);\r\n    });\r\n\r\n\r\n    const res = await this.state.model.executeAsync(input);\r\n    // Font options.\r\n    const font = \"16px sans-serif\";\r\n    ctx.font = font;\r\n    ctx.textBaseline = \"top\";\r\n\r\n    const [boxes, scores, classes, valid_detections] = res;\r\n    const boxes_data = boxes.dataSync();\r\n    const scores_data = scores.dataSync();\r\n    const classes_data = classes.dataSync();\r\n    const valid_detections_data = valid_detections.dataSync()[0];\r\n\r\n    // console.log(res);\r\n    // console.log(boxes_data);\r\n    // console.log(scores_data);\r\n    // console.log(classes_data);\r\n    // console.log(valid_detections_data);\r\n\r\n    tf.dispose(res)\r\n\r\n    var i;\r\n    const textHeight = parseInt(font, 10);\r\n    for (i = 0; i < valid_detections_data; ++i) {\r\n      let [x1, y1, x2, y2] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n      x1 *= c.width;\r\n      x2 *= c.width;\r\n      y1 *= c.height;\r\n      y2 *= c.height;\r\n      const width = x2 - x1;\r\n      const height = y2 - y1;\r\n      const klass = names[classes_data[i]];\r\n      const score = scores_data[i].toFixed(2);\r\n\r\n      // Draw the bounding box.\r\n      ctx.strokeStyle = colors[classes_data[i]];\r\n      ctx.lineWidth = 4;\r\n      ctx.strokeRect(x1, y1, width, height);\r\n\r\n      // Draw the label background.\r\n      ctx.fillStyle = colors[classes_data[i]];\r\n      const textWidth = ctx.measureText(klass + \":\" + score).width;\r\n      // const textHeight = parseInt(font, 10); // base 10\r\n      ctx.fillRect(x1-2, y1-textHeight-4, textWidth + 4, textHeight + 4);\r\n    }\r\n\r\n    for (i = 0; i < valid_detections_data; ++i) {\r\n      let [x1, y1, ,] = boxes_data.slice(i * 4, (i + 1) * 4);\r\n      x1 *= c.width;\r\n      y1 *= c.height;\r\n      const klass = names[classes_data[i]];\r\n      const score = scores_data[i].toFixed(2);\r\n\r\n      // Draw the text last to ensure it's on top.\r\n      ctx.fillStyle = \"#2f2e41\";\r\n      ctx.fillText(klass + \":\" + score, x1, y1 - textHeight);\r\n\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n        <h2 className=\"text-center title\">Face Mask Detection with YOLOv5</h2>\r\n        <p className=\"text-center subtitle\">Allow extension: .jpeg, .jpg, .png.</p>\r\n        {this.state.model ? (\r\n          <MagicDropzone\r\n            className=\"dropzone d-inline-flex justify-content-center align-items-center\"\r\n            accept=\"image/jpeg, image/png, .jpg, .jpeg, .png\"\r\n            multiple={false}\r\n            onDrop={this.onDrop}\r\n          >\r\n            {this.state.preview ? (\r\n              <img\r\n                alt=\"upload preview\"\r\n                onLoad={this.onImageChange}\r\n                className=\"dropzone-img\"\r\n                src={this.state.preview}\r\n              />\r\n            ) : (\r\n              <div className=\"d-flex flex-column justify-content-center align-self-center z-index-1 position-relative\">\r\n                <object data=\"./images/undraw_duplicate_re_d39g.svg\" width=\"auto\" height=\"100%\"> </object>\r\n                <p className=\"text-center\">Choose or drop image</p>\r\n              </div>             \r\n            )}\r\n            <canvas id=\"image-canvas\" className=\"image-canvas mx-auto z-index-2 position-absolute\" width=\"640\" height=\"640\" />\r\n          </MagicDropzone>\r\n        ) : (\r\n          <div className=\"dropzone d-flex flex-column justify-content-center align-items-center\">\r\n            <div className=\"lds-ellipsis\" id=\"ul-loader\"><div></div><div></div><div></div><div></div></div>\r\n            <p className=\"text-center\">Loading model</p>            \r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadApp;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nimport Realtime from './realtime';\r\nimport Upload from './upload';\r\n\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Router>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand mb-0 h1\">Face Mask Detection</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div id=\"navbarNavAltMarkup\" className=\"collapse navbar-collapse flex-grow-1 justify-content-end\">\r\n            <div className=\"navbar-nav\">\r\n              <a href=\"/\" className=\"nav-link\" aria-current=\"page\">Real-time</a>\r\n              <a href=\"/upload\" className=\"nav-link\">Upload</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Realtime />\r\n        </Route>\r\n        <Route path=\"/upload\">\r\n          <Upload />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Header from './header';\r\nimport \"./index.css\";\r\n\r\n\r\nconst headerElement = document.getElementById(\"header\");\r\nReactDOM.render(<Header />, headerElement);\r\n"],"sourceRoot":""}